ext {
    winswVersion = '2.0.2'
    winswBuildDir = "${project.buildDir}/windows-service/"
    winswLanguage = 'zh_CN'
    winswProfile = project.hasProperty("profile") ? profile : "prod"
}

repositories {
    maven{
        url 'http://repo.jenkins-ci.org/releases/'
    }
}

configurations{
    winsw { transitive = false }
}

dependencies {
    //WinSW
    winsw "com.sun.winsw:winsw:${winswVersion}:bin@exe"
}

task winswRepackage(dependsOn: bootRepackage, type: Copy) {
    def outPath = project.hasProperty("winswProfile") ?
            "${winswBuildDir}/${winswProfile}" :
            "${winswBuildDir}"

    from configurations.winsw
    from "${rootProject.rootDir}/gradle/batch/winsw_${winswLanguage}.bat"
    from "${project.buildDir}/libs/"
    into "${outPath}"
    rename "winsw-${winswVersion}-bin.exe", "${project.name}.exe"
    rename "winsw_${winswLanguage}.bat", "${project.name}.bat"
    rename "${project.name}-${version}.jar", "${project.name}.jar"

    doFirst{
        new File("${outPath}").mkdir()
        def batFile = new File("${rootProject.rootDir}/gradle/batch/winsw_${winswLanguage}.bat")
        if (!batFile.exists()) {
            batFile.getParentFile().mkdirs()
            new URL('https://raw.githubusercontent.com/xiaoyao9184/spring-boot-winsw-gradle-plugin/master/gradle/batch/winsw_zh_CN.bat')
                    .withInputStream{ i -> batFile.withOutputStream{ it << i }}
        }
    }

    doLast{
        def configuration = {
            mkp.xmlDeclaration()
            configuration() {
                id("${project.name}")
                name("${project.name}")
                executable("java")
                description([:], "${project.description}-${version}")
                arguments(
                        (project.hasProperty("winswProfile") ?
                                "-Dspring.profiles.active=${winswProfile} " :
                                "") +
                        "-jar \"${project.name}.jar\"")
                logmode("rotate")
            }
        }

        def builder = new groovy.xml.StreamingMarkupBuilder()
        builder.encoding = "UTF-8"
        def xml = new File("${outPath}/${project.name}.xml")
        xml.write(groovy.xml.XmlUtil.serialize(builder.bind(configuration)))
    }
}

configure(winswRepackage) {
    group = 'winsw'
    description = 'Spring Boot winsw build'
}
